/*
 * Copyright 2020 The edap Project
 *
 * The Netty Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

package io.edap.data.jdbc;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * 定义Statement的session可以用来将零散的数据库请求合并为大请求的实现方式。可以缓存PreparedStatement等对象
 */
public interface StatementSession {
    /**
     * 创建一个Statemen对象
     * @return
     */
    Statement createStatement() throws SQLException;

    /**
     * 获取当前StatementSession是否为自动提交
     * @return
     */
    boolean getAutoCommit() throws SQLException;

    /**
     * 设置当前自动提交的状态
     * @param autoCommit
     */
    void setAutoCommit(boolean autoCommit) throws SQLException;

    /**
     * 根据SQL语句返回一个PreparedStatement对象
     * @param sql
     * @return
     */
    PreparedStatement prepareStatement(String sql) throws SQLException;
    PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException;

    /**
     * 一次操作后关闭资源，如果是批量处理的StatementSession则不关闭数据库连接
     */
    void close();

    /**
     * 关闭当前StatementSession的数据库连接
     * @param closeConnection
     */
    void close(boolean closeConnection);

    void commit() throws SQLException;

    ConnectionHolder getConHolder();

    void setConHolder(ConnectionHolder conHolderer);
}
